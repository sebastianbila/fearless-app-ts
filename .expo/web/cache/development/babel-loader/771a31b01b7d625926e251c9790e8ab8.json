{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/login/ResetPasswordScreen.tsx\";\nimport React, { useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport Button from \"../../../components/Button\";\nimport { Input } from \"../../../components/Input\";\nimport i18n from \"../../../utils/locales/LocalesConfig\";\nimport { isApple } from \"../../../utils/constants/Ios\";\nimport AirGap from \"../../../components/AirGap\";\nimport { Toolbar } from \"../../../components/Toolbar\";\nimport validator from \"validator\";\n\nvar ResetPasswordScreen = function ResetPasswordScreen(props) {\n  var nav = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var alert = props.alert;\n\n  var resetPassword = function resetPassword() {\n    if (validator.isEmpty(email)) alert.show(i18n.t('requireFieldValidation'));else if (!validator.isEmail(email)) alert.show(i18n.t('emailValidation'));else {\n      alert.show({\n        type: 'message',\n        text: 'We will send you instruction'\n      });\n    }\n  };\n\n  return React.createElement(DismissView, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, isApple ? React.createElement(AirGap, {\n    color: Colors.white,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }) : null, React.createElement(Toolbar, {\n    text: i18n.t('resetPass_toolbarText'),\n    nav: nav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, i18n.t('resetPass_title')), React.createElement(View, {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, i18n.t('resetPass_subtitle')), React.createElement(View, {\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    inputType: \"full\",\n    placeholder: i18n.t('resetPass_emailField'),\n    borderType: \"full\",\n    keyboardType: Platform.OS === 'ios' ? 'ascii-capable' : 'email-address',\n    onChangeText: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: resetPassword,\n    text: i18n.t('resetPass_btnText'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: Colors.background\n  },\n  inputContainer: {\n    paddingTop: 15,\n    paddingHorizontal: 30,\n    alignItems: 'flex-start'\n  },\n  title: {\n    fontFamily: 'SF SemiBold',\n    fontSize: 18,\n    color: Colors.black\n  },\n  subtitle: {\n    fontFamily: 'SF Light',\n    fontSize: 14,\n    color: Colors.lightGray,\n    width: '90%'\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/login/ResetPasswordScreen.tsx"],"names":["React","useState","DismissView","Colors","Button","Input","i18n","isApple","AirGap","Toolbar","validator","ResetPasswordScreen","props","nav","navigation","email","setEmail","alert","resetPassword","isEmpty","show","t","isEmail","type","text","styles","wrapper","white","inputContainer","title","marginBottom","subtitle","Platform","OS","StyleSheet","create","height","width","backgroundColor","background","paddingTop","paddingHorizontal","alignItems","fontFamily","fontSize","color","black","lightGray"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Platform, StyleSheet, Text, View} from \"react-native\";\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport Button from \"../../../components/Button\";\nimport {Input} from \"../../../components/Input\";\nimport i18n from '../../../utils/locales/LocalesConfig'\nimport {isApple} from \"../../../utils/constants/Ios\";\nimport AirGap from \"../../../components/AirGap\";\nimport {Toolbar} from \"../../../components/Toolbar\";\nimport AlertConfig from \"../../../utils/alert/AlertConfig\";\nimport validator from \"validator\";\n\ntype IProps = {\n    navigation: any\n    alert: AlertConfig\n}\n\nconst ResetPasswordScreen: React.FC<IProps> = (props) => {\n    const nav = props.navigation\n    const [email, setEmail] = useState('')\n    const alert = props.alert\n\n    const resetPassword = () => {\n        if (validator.isEmpty(email)) alert.show(i18n.t('requireFieldValidation'))\n        else if (!validator.isEmail(email)) alert.show(i18n.t('emailValidation'))\n        else {\n            alert.show({\n                type: 'message',\n                text: 'We will send you instruction'\n            })\n        }\n    }\n\n    return (\n        <DismissView style={styles.wrapper}>\n            {isApple ? <AirGap color={Colors.white}/> : null}\n            <Toolbar text={i18n.t('resetPass_toolbarText')} nav={nav}/>\n            <View style={styles.inputContainer}>\n                <Text style={styles.title}>{i18n.t('resetPass_title')}</Text>\n                <View style={{marginBottom: 5}}/>\n                <Text style={styles.subtitle}>{i18n.t('resetPass_subtitle')}</Text>\n                <View style={{marginBottom: 10}}/>\n                <Input\n                    inputType=\"full\"\n                    placeholder={i18n.t('resetPass_emailField')}\n                    borderType=\"full\"\n                    keyboardType={Platform.OS === 'ios' ? 'ascii-capable' : 'email-address'}\n                    onChangeText={setEmail}/>\n\n                <View style={{marginBottom: 15}}/>\n                <Button\n                    onPress={resetPassword}\n                    text={i18n.t('resetPass_btnText')}/>\n            </View>\n\n            {/*<Alert type=\"error\"/>*/}\n        </DismissView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: Colors.background,\n    },\n    inputContainer: {\n        paddingTop: 15,\n        paddingHorizontal: 30,\n        alignItems: 'flex-start',\n    },\n    title: {\n        fontFamily: 'SF SemiBold',\n        fontSize: 18,\n        color: Colors.black,\n    },\n    subtitle: {\n        fontFamily: 'SF Light',\n        fontSize: 14,\n        color: Colors.lightGray,\n        width: '90%'\n    },\n\n})\n\n// function mapDispatchToProps(dispatch) {\n//     return {showMessage: text => dispatch(showMessage(true, text))}\n// }\n\nexport default ResetPasswordScreen\n"]},"metadata":{},"sourceType":"module"}