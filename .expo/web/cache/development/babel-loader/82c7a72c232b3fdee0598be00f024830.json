{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/registration/CompleteAccountScreen.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport { isApple } from \"../../../utils/constants/Ios\";\nimport ProgressBar from \"../../../components/ProgressBar\";\nimport Button from \"../../../components/Button\";\nimport { Input } from \"../../../components/Input\";\nimport { StatusBar } from \"expo-status-bar\";\nimport i18n from \"../../../utils/locales/LocalesConfig\";\n\nvar CompleteAccountScreen = function CompleteAccountScreen(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      name = _React$useState4[0],\n      setName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.image,\n    source: require('fearless-app/assets/img/create_account_bg.png'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, isApple ? React.createElement(StatusBar, {\n    style: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }\n  }) : null, React.createElement(DismissView, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(ProgressBar, {\n    navigation: props.navigation,\n    navigateTo: \"main\",\n    currentPage: props.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, React.createElement(Input, {\n    inputType: \"transparent\",\n    placeholder: i18n.t(\"completeUsernameText\"),\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, React.createElement(Input, {\n    inputType: \"transparent\",\n    placeholder: i18n.t(\"completeEmailText\"),\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, React.createElement(Input, {\n    inputType: \"transparent\",\n    placeholder: i18n.t(\"completeEmailText\"),\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, React.createElement(Input, {\n    borderType: \"none\",\n    inputType: \"transparent\",\n    placeholder: i18n.t(\"completePasswordText\"),\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }))), React.createElement(Button, {\n    text: i18n.t(\"btnNext\"),\n    style: styles.btnNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: Colors.backgroundDark\n  },\n  image: {\n    height: '100%',\n    width: '100%'\n  },\n  btnNext: {\n    width: '85%'\n  },\n  content: {\n    flex: 1,\n    paddingVertical: isApple ? 50 : 20,\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    marginBottom: 20\n  },\n  input: {\n    width: '85%',\n    marginBottom: 5\n  }\n});\nexport default CompleteAccountScreen;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/registration/CompleteAccountScreen.tsx"],"names":["React","DismissView","Colors","isApple","ProgressBar","Button","Input","StatusBar","i18n","CompleteAccountScreen","props","useState","username","setUsername","name","setName","email","setEmail","password","setPassword","styles","wrapper","image","require","content","navigation","page","contentContainer","input","t","text","btnNext","StyleSheet","create","height","width","backgroundColor","backgroundDark","flex","paddingVertical","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, StyleSheet, ImageBackground} from 'react-native'\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport {isApple} from \"../../../utils/constants/Ios\";\nimport ProgressBar from \"../../../components/ProgressBar\";\nimport Button from \"../../../components/Button\";\nimport {Input} from \"../../../components/Input\";\nimport {StatusBar} from \"expo-status-bar\";\nimport {IRegistrationType} from \"../../../utils/interfaces/IRegistration\";\nimport i18n from '../../../utils/locales/LocalesConfig'\n\nconst CompleteAccountScreen: React.FC<IRegistrationType> = props => {\n\n    const [username, setUsername] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n\n    return (\n        <View style={styles.wrapper}>\n            <ImageBackground\n                style={styles.image}\n                source={require('fearless-app/assets/img/create_account_bg.png')}>\n\n                {isApple ? <StatusBar style='light'/> : null}\n\n                <DismissView style={styles.content}>\n                    <ProgressBar\n                        navigation={props.navigation}\n                        navigateTo=\"main\"\n                        currentPage={props.page}/>\n\n                    <View style={styles.contentContainer}>\n                        <View style={styles.input}>\n                            <Input\n                                inputType=\"transparent\"\n                                placeholder={i18n.t(\"completeUsernameText\")}\n                                onChangeText={(text: string) => setUsername(text)}/>\n                        </View>\n                        <View style={styles.input}>\n                            <Input\n                                inputType=\"transparent\"\n                                placeholder={i18n.t(\"completeEmailText\")}\n                                onChangeText={(text: string) => setName(text)}/>\n                        </View>\n                        <View style={styles.input}>\n                            <Input\n                                inputType=\"transparent\"\n                                placeholder={i18n.t(\"completeEmailText\")}\n                                onChangeText={(text: string) => setEmail(text)}/>\n                        </View>\n                        <View style={styles.input}>\n                            <Input\n                                borderType=\"none\"\n                                inputType=\"transparent\"\n                                placeholder={i18n.t(\"completePasswordText\")}\n                                onChangeText={(text: string) => setPassword(text)}/>\n                        </View>\n                    </View>\n\n                    <Button\n                        text={i18n.t(\"btnNext\")}\n                        // onPress={}\n                        style={styles.btnNext}/>\n                </DismissView>\n            </ImageBackground>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: Colors.backgroundDark\n    },\n    image: {\n        height: '100%',\n        width: '100%',\n    },\n    btnNext: {\n        width: '85%',\n    },\n    content: {\n        flex: 1,\n        paddingVertical: isApple ? 50 : 20,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    contentContainer: {\n        flex: 1,\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        marginBottom: 20\n    },\n    input: {\n        width: '85%',\n        marginBottom: 5\n    },\n\n})\n\n\nexport default CompleteAccountScreen\n"]},"metadata":{},"sourceType":"module"}