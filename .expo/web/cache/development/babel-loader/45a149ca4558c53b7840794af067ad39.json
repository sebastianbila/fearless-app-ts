{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/greatcan/WebstormProjects/fearless-app-ts/src/components/ProgressBar.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Colors from \"../utils/constants/Colors\";\nimport { SvgXml } from \"react-native-svg\";\nimport { backArrow } from \"../../assets/icons/white_arrow\";\n\nvar ProgressBar = function ProgressBar(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  React.useEffect(function () {\n    var value = 100 / 2 * 1;\n    setProgress(value);\n  }, []);\n\n  var goBack = function goBack() {\n    props.navigation.navigate(props.navigateTo);\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.btnBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, React.createElement(SvgXml, {\n    xml: backArrow,\n    fill: Colors.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.progressWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.progressCover, {\n      width: progress + \"%\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  progressWrapper: {\n    width: '50%',\n    height: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    position: 'relative'\n  },\n  btnBack: {\n    position: 'absolute',\n    left: 25\n  },\n  progress: {\n    width: '50%',\n    height: 7,\n    backgroundColor: Colors.gray,\n    borderRadius: 10,\n    flex: 1\n  },\n  progressCover: {\n    height: '100%',\n    backgroundColor: Colors.white,\n    borderRadius: 10,\n    flex: 1,\n    position: 'absolute'\n  }\n});\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/components/ProgressBar.tsx"],"names":["React","Colors","SvgXml","backArrow","ProgressBar","props","useState","progress","setProgress","useEffect","value","goBack","navigation","navigate","navigateTo","styles","wrapper","btnBack","error","progressWrapper","progressCover","width","StyleSheet","create","flexDirection","justifyContent","alignItems","height","position","left","backgroundColor","gray","borderRadius","flex","white"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {View, StyleSheet, TouchableWithoutFeedback} from 'react-native'\nimport Colors from \"../utils/constants/Colors\";\nimport {SvgXml} from \"react-native-svg\";\nimport {backArrow} from \"../../assets/icons/white_arrow\";\nimport {useSelector} from \"react-redux\";\nimport {AppState} from \"../redux/_store/reduxStore\";\n\ntype IProps = {\n    navigation: any,\n    navigateTo: string\n    currentPage: number,\n};\n\nconst ProgressBar: React.FC<IProps> = (props) => {\n    const [progress, setProgress] = React.useState(0)\n\n    React.useEffect(() => {\n        const value = (100 / 2) * 1\n        setProgress(value)\n    }, [])\n\n    const goBack = () => {\n        props.navigation.navigate(props.navigateTo)\n    }\n\n    return (\n        <View style={styles.wrapper}>\n            <View style={styles.btnBack}>\n                <TouchableWithoutFeedback onPress={() => goBack()}>\n                    <SvgXml xml={backArrow} fill={Colors.error}/>\n                </TouchableWithoutFeedback>\n            </View>\n            <View style={styles.progressWrapper}>\n                <View style={styles.progress}/>\n                <View style={[styles.progressCover, {width: `${progress}%`}]}/>\n            </View>\n        </View>\n    );\n\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n    },\n    progressWrapper: {\n        width: '50%',\n        height: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        position: 'relative'\n    },\n    btnBack: {\n        position: 'absolute',\n        left: 25,\n    },\n    progress: {\n        width: '50%',\n        height: 7,\n        backgroundColor: Colors.gray,\n        borderRadius: 10,\n        flex: 1,\n    },\n    progressCover: {\n        height: '100%',\n        backgroundColor: Colors.white,\n        borderRadius: 10,\n        flex: 1,\n        position: 'absolute'\n    },\n})\n\n\nexport default ProgressBar\n"]},"metadata":{},"sourceType":"module"}