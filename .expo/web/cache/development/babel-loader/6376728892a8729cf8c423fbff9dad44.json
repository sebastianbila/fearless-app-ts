{"ast":null,"code":"var _jsxFileName = \"/Users/greatcan/WebstormProjects/fearless-app-ts/src/components/SelectBox.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SvgXml } from \"react-native-svg\";\nimport { man, woman } from \"../../assets/icons/icon_gender\";\nimport Colors from \"../utils/constants/Colors\";\n\nvar SelectBox = function SelectBox(props) {\n  var icon = props.icon === \"man\" ? man : props.icon === \"woman\" ? woman : null;\n  var marginFromIcon = props.icon ? {\n    marginTop: 10\n  } : null;\n  var marginFromSubtext = props.subtext ? {\n    marginBottom: 10\n  } : null;\n  var subTextCls = [styles.subtext];\n  if (props.selected) subTextCls.push({\n    color: Colors.white\n  });\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: props.onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.box, props.style, props.selected ? styles.active : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, icon ? React.createElement(SvgXml, {\n    xml: icon,\n    fill: Colors.white,\n    width: 50,\n    height: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }) : null, React.createElement(Text, {\n    style: [styles.text, marginFromIcon, marginFromSubtext],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, props.text), props.subtext ? React.createElement(Text, {\n    style: subTextCls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }\n  }, props.subtext) : null));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    backgroundColor: Colors.none,\n    borderColor: Colors.white,\n    borderWidth: 1,\n    borderRadius: 10,\n    flexShrink: 0,\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0\n  },\n  text: {\n    color: Colors.white,\n    fontSize: 20,\n    fontFamily: 'SF Medium'\n  },\n  subtext: {\n    color: Colors.lightGray,\n    fontSize: 14,\n    fontFamily: 'SF Light',\n    marginTop: -5\n  },\n  active: {\n    backgroundColor: Colors.primary,\n    borderColor: Colors.primary\n  }\n});\nexport default SelectBox;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/components/SelectBox.tsx"],"names":["React","SvgXml","man","woman","Colors","SelectBox","props","icon","marginFromIcon","marginTop","marginFromSubtext","subtext","marginBottom","subTextCls","styles","selected","push","color","white","onPress","box","style","active","text","StyleSheet","create","backgroundColor","none","borderColor","borderWidth","borderRadius","flexShrink","flexGrow","justifyContent","alignItems","padding","margin","fontSize","fontFamily","lightGray","primary"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View, TouchableWithoutFeedback, StyleSheet, Text} from 'react-native'\nimport {SvgXml} from \"react-native-svg\";\nimport {man, woman} from \"../../assets/icons/icon_gender\";\nimport Colors from \"../utils/constants/Colors\";\n\ninterface IProps extends React.PropsWithChildren<any> {\n    text: string,\n    subtext?: string,\n    icon?: string,\n    selected?: boolean\n}\n\nconst SelectBox: React.FC<IProps> = (props) => {\n    const icon = props.icon === \"man\" ? man : props.icon === \"woman\" ? woman : null\n    const marginFromIcon = props.icon ? {marginTop: 10} : null\n    const marginFromSubtext = props.subtext ? {marginBottom: 10} : null\n\n    const subTextCls: Array<{}> = [styles.subtext]\n\n    if (props.selected) subTextCls.push({color: Colors.white})\n\n    return (\n        <TouchableWithoutFeedback onPress={props.onPress}>\n            <View style={[styles.box, props.style, props.selected ? styles.active : null]}>\n                {/* Icon */}\n                {icon ? <SvgXml xml={icon} fill={Colors.white} width={50} height={50}/> : null}\n\n                {/* Text */}\n                <Text style={[styles.text, marginFromIcon, marginFromSubtext]}>{props.text}</Text>\n\n                {/* Subtext */}\n                {props.subtext ? <Text style={subTextCls}>\n                    {props.subtext}</Text> : null}\n            </View>\n        </TouchableWithoutFeedback>\n    );\n}\n\nconst styles = StyleSheet.create({\n    box: {\n        backgroundColor: Colors.none,\n        borderColor: Colors.white,\n        borderWidth: 1,\n        borderRadius: 10,\n        flexShrink: 0,\n        flexGrow: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 0,\n        margin: 0,\n    },\n    text: {\n        color: Colors.white,\n        fontSize: 20,\n        fontFamily: 'SF Medium',\n    },\n    subtext: {\n        color: Colors.lightGray,\n        fontSize: 14,\n        fontFamily: 'SF Light',\n        marginTop: -5\n    },\n    active: {\n        backgroundColor: Colors.primary,\n        borderColor: Colors.primary,\n    },\n})\n\nexport default SelectBox\n"]},"metadata":{},"sourceType":"module"}