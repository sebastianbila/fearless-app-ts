{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/login/LoginScreen.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport { isApple } from \"../../../utils/constants/Ios\";\nimport AirGap from \"../../../components/AirGap\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport Button from \"../../../components/Button\";\nimport i18n from \"../../../utils/locales/LocalesConfig\";\nimport validator from 'validator';\nimport { Toolbar } from \"../../../components/Toolbar\";\nimport { Input } from \"../../../components/Input\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var nav = props.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var alert = props.alert;\n\n  var signIn = function signIn() {\n    if (validator.isEmpty(password) || validator.isEmpty(email)) {\n      alert.show(i18n.t('requireFieldValidation'));\n    } else {\n      if (!validator.isEmail(email)) alert.show(i18n.t('emailValidation'));else if (password.length < 6) alert.show(i18n.t('passMinLength'));\n    }\n  };\n\n  return React.createElement(DismissView, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, isApple ? React.createElement(AirGap, {\n    color: Colors.white,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }) : null, React.createElement(Toolbar, {\n    text: i18n.t('login_toolbarText'),\n    nav: nav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    inputType: \"full\",\n    placeholder: i18n.t('login_emailField'),\n    borderType: \"borderTop\",\n    keyboardType: Platform.OS === 'ios' ? 'ascii-capable' : 'email-address',\n    onChangeText: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    inputType: \"full\",\n    secureTextEntry: true,\n    keyboardType: Platform.OS === 'ios' ? 'ascii-capable' : 'default',\n    maxLength: 32,\n    placeholder: i18n.t('login_passwordField'),\n    borderType: \"borderBottom\",\n    onChangeText: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return signIn();\n    },\n    text: i18n.t('login_btnText'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.forgotPassword,\n    onPress: function onPress() {\n      return nav.navigate(\"resetPassword\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, i18n.t('login_forgotPassword'))));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: Colors.background\n  },\n  inputContainer: {\n    paddingTop: 15,\n    paddingHorizontal: 30,\n    alignItems: 'center'\n  },\n  forgotPassword: {\n    fontFamily: 'SF Medium',\n    fontSize: 16,\n    color: Colors.lightGray,\n    textDecorationLine: 'underline'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/app/authentication/login/LoginScreen.tsx"],"names":["React","DismissView","isApple","AirGap","Colors","Button","i18n","validator","Toolbar","Input","LoginScreen","props","nav","navigation","useState","email","setEmail","password","setPassword","alert","signIn","isEmpty","show","t","isEmail","length","styles","wrapper","white","inputContainer","Platform","OS","marginBottom","forgotPassword","navigate","StyleSheet","create","height","width","backgroundColor","background","paddingTop","paddingHorizontal","alignItems","fontFamily","fontSize","color","lightGray","textDecorationLine"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {View, Text, StyleSheet, Platform} from 'react-native'\nimport DismissView from \"../../../components/hoc/DismissView\";\nimport {isApple} from \"../../../utils/constants/Ios\";\nimport AirGap from \"../../../components/AirGap\";\nimport Colors from \"../../../utils/constants/Colors\";\nimport Button from \"../../../components/Button\";\nimport i18n from '../../../utils/locales/LocalesConfig'\nimport validator from 'validator'\nimport {Toolbar} from \"../../../components/Toolbar\";\nimport {Input} from \"../../../components/Input\";\nimport AlertConfig from \"../../../utils/alert/AlertConfig\";\n\ntype IProps = {\n    navigation: any\n    alert: AlertConfig\n}\n\nconst LoginScreen: React.FC<IProps> = (props) => {\n    const nav = props.navigation\n\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n    const alert = props.alert\n\n    const signIn = () => {\n        if (validator.isEmpty(password) || validator.isEmpty(email)) {\n            alert.show(i18n.t('requireFieldValidation'))\n        } else {\n            if (!validator.isEmail(email)) alert.show(i18n.t('emailValidation'))\n            else if (password.length < 6) alert.show(i18n.t('passMinLength'))\n        }\n    }\n\n    return (\n        <DismissView style={styles.wrapper}>\n            {isApple ? <AirGap color={Colors.white}/> : null}\n\n            <Toolbar text={i18n.t('login_toolbarText')} nav={nav}/>\n\n            <View style={styles.inputContainer}>\n                <Input\n                    inputType=\"full\"\n                    placeholder={i18n.t('login_emailField')}\n                    borderType=\"borderTop\"\n                    keyboardType={Platform.OS === 'ios' ? 'ascii-capable' : 'email-address'}\n                    onChangeText={setEmail}/>\n\n                <View style={{marginBottom: 5}}/>\n\n                <Input\n                    inputType=\"full\"\n                    secureTextEntry={true}\n                    keyboardType={Platform.OS === 'ios' ? 'ascii-capable' : 'default'}\n                    maxLength={32}\n                    placeholder={i18n.t('login_passwordField')}\n                    borderType=\"borderBottom\"\n                    onChangeText={setPassword}/>\n\n                <View style={{marginBottom: 20}}/>\n                <Button\n                    onPress={() => signIn()}\n                    text={i18n.t('login_btnText')}/>\n\n                <View style={{marginBottom: 20}}/>\n\n                <Text style={styles.forgotPassword}\n                      onPress={() => nav.navigate(\"resetPassword\")}>\n                    {i18n.t('login_forgotPassword')}\n                </Text>\n            </View>\n        </DismissView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: Colors.background,\n    },\n    inputContainer: {\n        paddingTop: 15,\n        paddingHorizontal: 30,\n        alignItems: 'center',\n    },\n    forgotPassword: {\n        fontFamily: 'SF Medium',\n        fontSize: 16,\n        color: Colors.lightGray,\n        textDecorationLine: 'underline'\n    }\n})\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}