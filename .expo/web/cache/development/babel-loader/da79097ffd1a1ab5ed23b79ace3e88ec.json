{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { showAlert as alert } from \"../../redux/alert/alertAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nvar AlertConfig = function () {\n  function AlertConfig() {\n    _classCallCheck(this, AlertConfig);\n\n    this.dispatcher = useDispatch();\n    this.alertState = useSelector(function (state) {\n      return state.alert;\n    });\n  }\n\n  _createClass(AlertConfig, [{\n    key: \"dispatch\",\n    value: function dispatch(content) {\n      if (typeof content === \"object\") {\n        this.dispatcher(alert(content));\n      } else {\n        var newObject = {\n          text: content,\n          status: true\n        };\n        this.dispatcher(alert(newObject));\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(content) {\n      var isBack = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (isBack) {\n        this.dispatch(content);\n      } else {\n        if (!this.alertState.isShowing) this.dispatch(content);\n      }\n    }\n  }]);\n\n  return AlertConfig;\n}();\n\nexport default AlertConfig;","map":{"version":3,"sources":["/Users/greatcan/WebstormProjects/fearless-app-ts/src/utils/alert/AlertConfig.ts"],"names":["showAlert","alert","useDispatch","useSelector","AlertConfig","dispatcher","alertState","state","content","newObject","text","status","isBack","dispatch","isShowing"],"mappings":";;AAEA,SAAQA,SAAS,IAAIC,KAArB;AACA,SAAiBC,WAAjB,EAA8BC,WAA9B,QAAgD,aAAhD;;IAGMC,W;;;;SACMC,U,GAAaH,WAAW,E;SAChCI,U,GAAaH,WAAW,CAAC,UAACI,KAAD;AAAA,aAAqBA,KAAK,CAACN,KAA3B;AAAA,KAAD,C;;;;;6BAEPO,O,EAA0B;AACvC,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,aAAKH,UAAL,CAAgBJ,KAAK,CAACO,OAAD,CAArB;AACH,OAFD,MAEO;AACH,YAAMC,SAAS,GAAG;AAACC,UAAAA,IAAI,EAAEF,OAAP;AAAgBG,UAAAA,MAAM,EAAE;AAAxB,SAAlB;AACA,aAAKN,UAAL,CAAgBJ,KAAK,CAACQ,SAAD,CAArB;AACH;AACJ;;;yBAEID,O,EAAmD;AAAA,UAAzBI,MAAyB,uEAAP,KAAO;;AACpD,UAAIA,MAAJ,EAAY;AACR,aAAKC,QAAL,CAAcL,OAAd;AACH,OAFD,MAEO;AACH,YAAI,CAAC,KAAKF,UAAL,CAAgBQ,SAArB,EAAgC,KAAKD,QAAL,CAAcL,OAAd;AACnC;AACJ;;;;;;AAIL,eAAeJ,WAAf","sourcesContent":["import React from 'react'\nimport {IAlert} from \"../../redux/alert/alertType\";\nimport {showAlert as alert} from \"../../redux/alert/alertAction\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\nimport {AppState} from \"../../redux/_store/reduxStore\";\n\nclass AlertConfig {\n    private dispatcher = useDispatch()\n    alertState = useSelector((state: AppState) => state.alert)\n\n    private dispatch(content: string | IAlert) {\n        if (typeof content === \"object\") {\n            this.dispatcher(alert(content))\n        } else {\n            const newObject = {text: content, status: true}\n            this.dispatcher(alert(newObject))\n        }\n    }\n\n    show(content: string | IAlert, isBack: boolean = false) {\n        if (isBack) {\n            this.dispatch(content)\n        } else {\n            if (!this.alertState.isShowing) this.dispatch(content)\n        }\n    }\n}\n\n\nexport default AlertConfig\n"]},"metadata":{},"sourceType":"module"}